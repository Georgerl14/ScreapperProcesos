<!DOCTYPE html>
<html lang="en-US">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />

  <!-- OneTrust Cookies Consent Notice start for stackoverflow.blog -->
  <script type="text/javascript" src="https://cdn.cookielaw.org/consent/b8cf34e4-1fe8-4a99-8bb6-1ef8da891c2f/OtAutoBlock.js" ></script>
  <script src="https://cdn.cookielaw.org/scripttemplates/otSDKStub.js"  type="text/javascript" charset="UTF-8" data-domain-script="b8cf34e4-1fe8-4a99-8bb6-1ef8da891c2f" ></script>
  <script type="text/javascript">
  function OptanonWrapper() { }
  </script>
  <!-- OneTrust Cookies Consent Notice end for stackoverflow.blog -->
    
  <meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />

	<!-- This site is optimized with the Yoast SEO Premium plugin v19.4 (Yoast SEO v19.9) - https://yoast.com/wordpress/plugins/seo/ -->
	<title>When to use gRPC vs GraphQL - Stack Overflow Blog</title>
	<link rel="canonical" href="https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/" />
	<meta property="og:locale" content="en_US" />
	<meta property="og:type" content="article" />
	<meta property="og:title" content="When to use gRPC vs GraphQL" />
	<meta property="og:description" content="We dig into two of the most popular API protocols to see where they work best." />
	<meta property="og:url" content="https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/" />
	<meta property="og:site_name" content="Stack Overflow Blog" />
	<meta property="article:publisher" content="https://www.facebook.com/officialstackoverflow/" />
	<meta property="article:published_time" content="2022-11-28T15:26:09+00:00" />
	<meta property="article:modified_time" content="2022-11-28T15:57:16+00:00" />
	<meta property="og:image" content="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-scaled.jpg" />
	<meta property="og:image:width" content="2560" />
	<meta property="og:image:height" content="1344" />
	<meta property="og:image:type" content="image/jpeg" />
	<meta name="author" content="Ryan Donovan" />
	<meta name="twitter:card" content="summary_large_image" />
	<meta name="twitter:creator" content="@StackOverflow" />
	<meta name="twitter:site" content="@StackOverflow" />
	<script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"Article","@id":"https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/","url":"https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/","name":"When to use gRPC vs GraphQL - Stack Overflow Blog","isPartOf":{"@id":"https://stackoverflow.blog/#website"},"primaryImageOfPage":{"@id":"https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/#primaryimage"},"image":{"@id":"https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/#primaryimage"},"thumbnailUrl":"https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-scaled.jpg","datePublished":"2022-11-28T15:26:09+00:00","dateModified":"2022-11-28T15:57:16+00:00","author":[{"@type":"Person","name":"Loren Sands-Ramshaw"}],"breadcrumb":{"@id":"https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/#primaryimage","url":"https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-scaled.jpg","contentUrl":"https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-scaled.jpg","width":2560,"height":1344},{"@type":"BreadcrumbList","@id":"https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https://stackoverflow.blog/"},{"@type":"ListItem","position":2,"name":"When to use gRPC vs GraphQL"}]},{"@type":"WebSite","@id":"https://stackoverflow.blog/#website","url":"https://stackoverflow.blog/","name":"Stack Overflow Blog","description":"Essays, opinions, and advice on the act of computer programming from Stack Overflow.","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://stackoverflow.blog/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}</script>
	<!-- / Yoast SEO Premium plugin. -->


<link rel='dns-prefetch' href='//cdnjs.cloudflare.com' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel="alternate" type="application/rss+xml" title="Stack Overflow Blog &raquo; Feed" href="https://stackoverflow.blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="Stack Overflow Blog &raquo; Comments Feed" href="https://stackoverflow.blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Stack Overflow Blog &raquo; When to use gRPC vs GraphQL Comments Feed" href="https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/feed/" />
<script type="text/javascript">
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/14.0.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/14.0.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/stackoverflow.blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.1.1"}};
/*! This file is auto-generated */
!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode,e=(p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0),i.toDataURL());return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(p&&p.fillText)switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([129777,127995,8205,129778,127999],[129777,127995,8203,129778,127999])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(e=t.source||{}).concatemoji?c(e.concatemoji):e.wpemoji&&e.twemoji&&(c(e.twemoji),c(e.wpemoji)))}(window,document,window._wpemojiSettings);
</script>
<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 0.07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='wp-block-library-css' href='https://149351115.v2.pressablecdn.com/wp-includes/css/dist/block-library/style.min.css?ver=6.1.1' type='text/css' media='all' />
<style id='wp-block-library-inline-css' type='text/css'>
.has-text-align-justify{text-align:justify;}
</style>
<link rel='stylesheet' id='mediaelement-css' href='https://149351115.v2.pressablecdn.com/wp-includes/js/mediaelement/mediaelementplayer-legacy.min.css?ver=4.2.17' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css' href='https://149351115.v2.pressablecdn.com/wp-includes/js/mediaelement/wp-mediaelement.min.css?ver=6.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='classic-theme-styles-css' href='https://149351115.v2.pressablecdn.com/wp-includes/css/classic-themes.min.css?ver=1' type='text/css' media='all' />
<style id='global-styles-inline-css' type='text/css'>
body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;}:where(.is-layout-flex){gap: 0.5em;}body .is-layout-flow > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}body .is-layout-flow > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}body .is-layout-flow > .aligncenter{margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}body .is-layout-constrained > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}body .is-layout-constrained > .aligncenter{margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > :where(:not(.alignleft):not(.alignright):not(.alignfull)){max-width: var(--wp--style--global--content-size);margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > .alignwide{max-width: var(--wp--style--global--wide-size);}body .is-layout-flex{display: flex;}body .is-layout-flex{flex-wrap: wrap;align-items: center;}body .is-layout-flex > *{margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
.wp-block-navigation a:where(:not(.wp-element-button)){color: inherit;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}
.wp-block-pullquote{font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='mo_saml_admin_settings_style-css' href='https://149351115.v2.pressablecdn.com/wp-content/plugins/miniorange-saml-20-single-sign-on/includes/css/jquery.ui.css?ver=6.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='stacks-css' href='https://149351115.v2.pressablecdn.com/wp-content/themes/stackoverflow/css/stacks.0.55.4.min.css' type='text/css' media='all' />
<link rel='stylesheet' id='googlefonts-css' href='https://fonts.googleapis.com/css?family=Roboto+Slab:700|Source+Sans+Pro:400,400i,700,700i&#038;display=swap' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css' href='https://149351115.v2.pressablecdn.com/wp-content/plugins/jetpack/css/jetpack.css?ver=11.6-a.5' type='text/css' media='all' />
<script type='text/javascript' id='jetpack_related-posts-js-extra'>
/* <![CDATA[ */
var related_posts_js_options = {"post_heading":"h4"};
/* ]]> */
</script>
<script type='text/javascript' src='https://149351115.v2.pressablecdn.com/wp-content/plugins/jetpack/_inc/build/related-posts/related-posts.min.js?ver=20211209' id='jetpack_related-posts-js'></script>
<script type='text/javascript' src='https://149351115.v2.pressablecdn.com/wp-includes/js/jquery/jquery.min.js?ver=3.6.1' id='jquery-core-js'></script>
<script type='text/javascript' src='https://149351115.v2.pressablecdn.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' src='https://149351115.v2.pressablecdn.com/wp-content/plugins/miniorange-saml-20-single-sign-on/includes/js/settings.js?ver=6.1.1' id='mo_saml_admin_settings_script_widget-js'></script>
<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/highlight.min.js?ver=6.1.1' id='highlight-js'></script>
<link rel="https://api.w.org/" href="https://stackoverflow.blog/wp-json/" /><link rel="alternate" type="application/json" href="https://stackoverflow.blog/wp-json/wp/v2/posts/21194" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://stackoverflow.blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://stackoverflow.blog/wp-includes/wlwmanifest.xml" />

<link rel='shortlink' href='https://stackoverflow.blog/?p=21194' />
<link rel="alternate" type="application/json+oembed" href="https://stackoverflow.blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fstackoverflow.blog%2F2022%2F11%2F28%2Fwhen-to-use-grpc-vs-graphql%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://stackoverflow.blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fstackoverflow.blog%2F2022%2F11%2F28%2Fwhen-to-use-grpc-vs-graphql%2F&#038;format=xml" />
	<style>img#wpstats{display:none}</style>
		<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style><link rel="icon" href="https://149351115.v2.pressablecdn.com/wp-content/uploads/2017/03/cropped-SO_Logo_glyph-use-this-one-smaller-32x32.jpg" sizes="32x32" />
<link rel="icon" href="https://149351115.v2.pressablecdn.com/wp-content/uploads/2017/03/cropped-SO_Logo_glyph-use-this-one-smaller-192x192.jpg" sizes="192x192" />
<link rel="apple-touch-icon" href="https://149351115.v2.pressablecdn.com/wp-content/uploads/2017/03/cropped-SO_Logo_glyph-use-this-one-smaller-180x180.jpg" />
<meta name="msapplication-TileImage" content="https://149351115.v2.pressablecdn.com/wp-content/uploads/2017/03/cropped-SO_Logo_glyph-use-this-one-smaller-270x270.jpg" />
<!-- Google Analytics -->
<script>
  (function (i, s, o, g, r, a, m) {
    i['GoogleAnalyticsObject'] = r;
    i[r] = i[r] || function () {
      (i[r].q = i[r].q || []).push(arguments)
    }, i[r].l = 1 * new Date();
    a = s.createElement(o),
      m = s.getElementsByTagName(o)[0];
    a.async = 1;
    a.src = g;
    m.parentNode.insertBefore(a, m)
  })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

  ga('create', 'UA-108242619-10', 'auto', {'allowLinker': true});
  ga('require', 'linker');
  ga('linker:autoLink', [
    'stackoverflow.com',
    'info.stackoverflowsolutions.com',
    'stackoverflowsolutions.com'
  ]);
  ga('send', 'pageview');
</script>
<!-- End Google Analytics -->

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-5P4MJJ2');</script>
<!-- End Google Tag Manager -->

<script>
document.addEventListener('DOMContentLoaded', (event) => {
  document.querySelectorAll('.wp-block-code').forEach((block) => {
    hljs.highlightBlock(block);
  });
});
</script>

  <link rel="stylesheet" type="text/css" href="https://149351115.v2.pressablecdn.com/wp-content/themes/stackoverflow/style.css?v=26" />

  <link rel="shortcut icon" href="https://149351115.v2.pressablecdn.com/wp-content/themes/stackoverflow/img/favicon.ico">
  <link rel="apple-touch-icon" href="https://149351115.v2.pressablecdn.com/wp-content/themes/stackoverflow/img/apple-touch-icon.png">
  <link rel="image_src" href="https://149351115.v2.pressablecdn.com/wp-content/themes/stackoverflow/img/apple-touch-icon.png"> 
</head>
<body class="post-template-default single single-post postid-21194 single-format-standard wp-embed-responsive" >
  
<script>
  var forceSetting = localStorage.getItem("forceDarkModeOn");
  var browserPrefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
  var darkModeEnabled = forceSetting === "true" || (!forceSetting && browserPrefersDark);

  if (browserPrefersDark) {
    document.body.classList.toggle("theme-system", darkModeEnabled);
    document.body.classList.toggle("theme-dark", false);
  }
  else {
    document.body.classList.toggle("theme-system", true);
    document.body.classList.toggle("theme-dark", darkModeEnabled);
  }
</script>

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5P4MJJ2"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<img height="1" width="1" style="display:none" alt="" src="https://www.googleadservices.com/pagead/conversion/961466557/?guid=ON&script=0&random=618987799&url=https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/" />

  
  <div id="wrapper" class="hfeed">
    <header id="header" role="banner" class="p-wrapper mx-auto pt32 mb24 grid ai-center sm:fd-column">
      <div id="site-title">
        <a
          href="https://stackoverflow.blog/"
          title="Stack Overflow Blog"
          rel="home"
          >
            <svg class="native wmx100 native" width="309" height="64" viewBox="0 0 309 64" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M43.9001 32.9027C43.9001 24.4982 48.6388 19.8489 55.7022 19.8489C62.7655 19.8489 67.5043 24.5876 67.5043 32.9027C67.5043 41.3072 62.7655 46.2247 55.7022 46.2247C48.7282 46.2247 43.9001 41.2178 43.9001 32.9027ZM60.7091 32.9027C60.7091 28.2534 58.8315 25.5711 55.7916 25.5711C52.7517 25.5711 50.874 28.2534 50.874 32.9027C50.874 37.552 52.7517 40.4131 55.7916 40.4131C58.8315 40.4131 60.7091 37.4626 60.7091 32.9027Z" fill="#F48024"/>
<path d="M69.9183 20.2064H77.0711L79.7534 31.2932C80.4687 33.9755 80.9157 36.6578 81.631 39.3401H81.8098C82.5251 36.5684 83.0616 33.9755 83.6874 31.2932L86.2803 20.2064H93.1649L85.6545 45.6882H77.5182L69.9183 20.2064Z" fill="#F48024"/>
<path d="M97.3672 20.2064H113.819V25.9286H104.073V29.9521H112.388V35.5849H104.073V40.1448H114.176V45.7776H97.3672V20.2064Z" fill="#F48024"/>
<path d="M119.63 20.2064H129.287C134.74 20.2064 139.479 22.084 139.479 28.4321C139.479 32.0979 137.87 34.4226 135.366 35.7637L140.91 45.5988H133.399L129.018 37.0154H126.425V45.5988H119.72V20.2064H119.63ZM128.839 31.8297C131.522 31.8297 132.952 30.6674 132.952 28.4321C132.952 26.1969 131.522 25.571 128.839 25.571H126.425V31.8297H128.839Z" fill="#F48024"/>
<path d="M145.738 20.2064H162.368V25.9286H152.533V30.7568H161.027V36.3896H152.533V45.6882H145.738V20.2064Z" fill="#F48024"/>
<path d="M166.034 20.2064H172.74V40.0554H182.396V45.6882H166.034V20.2064Z" fill="#F48024"/>
<path d="M183.648 32.9027C183.648 24.4982 188.386 19.8489 195.45 19.8489C202.513 19.8489 207.252 24.5876 207.252 32.9027C207.252 41.3072 202.513 46.2247 195.45 46.2247C188.476 46.2247 183.648 41.2178 183.648 32.9027ZM200.457 32.9027C200.457 28.2534 198.579 25.5711 195.539 25.5711C192.499 25.5711 190.621 28.2534 190.621 32.9027C190.621 37.552 192.499 40.4131 195.539 40.4131C198.579 40.4131 200.457 37.4626 200.457 32.9027Z" fill="#F48024"/>
<path d="M210.828 20.2064H217.713L219.143 31.2932C219.412 33.9755 219.769 36.6578 220.037 39.2507H220.216C220.663 36.5684 221.2 33.8861 221.647 31.2932L224.061 20.2064H229.694L232.108 31.2932C232.555 33.7967 233.091 36.5684 233.538 39.2507H233.717C233.985 36.5684 234.343 33.8861 234.611 31.2932L236.042 20.2064H242.479L238.277 45.6882H229.694L227.727 35.5849C227.369 33.6179 227.011 31.472 226.743 29.5944H226.564C226.296 31.472 226.028 33.6179 225.581 35.5849L223.703 45.6882H215.299L210.828 20.2064Z" fill="#F48024"/>
<path d="M10.1927 27.2698V30.3097H8.40451L8.3151 29.058H6.25868V37.1048L7.51042 37.3731V38.7142H2.68229V37.3731L3.93403 37.1048V29.058H1.8776L1.78819 30.3097H0V27.2698H10.1927Z" fill="#F48024"/>
<path d="M11.4445 28.6113V27.2701H16.1832V28.6113L14.9314 28.8795V32.1877H19.6702V28.8795L18.4184 28.6113V27.2701H19.6702H21.9948H23.2465V28.6113L21.9948 28.8795V37.1052L23.2465 37.3734V38.7146H18.5078V37.3734L19.7596 37.1052V33.9759H15.1103V37.1052L16.362 37.3734V38.7146H11.6233V37.3734L12.875 37.1052V28.8795L11.4445 28.6113Z" fill="#F48024"/>
<path d="M31.8299 33.6182H27.9853V36.9264H31.6511L31.7405 35.5852H33.5287V38.7146H24.4983V37.3734L25.75 37.1052V28.8795L24.4983 28.6113V27.2701H25.75H33.5287V30.3995H31.7405L31.6511 29.0583H27.9853V31.9194H31.8299V33.6182Z" fill="#F48024"/>
<path d="M187.492 19.5807C186.598 18.776 185.704 17.9714 184.81 17.2561L185.346 16.5408C186.24 17.2561 187.135 18.0608 188.029 18.8654L187.492 19.5807ZM108.365 15.9149L107.828 15.1997C108.543 14.6632 109.259 14.0373 109.885 13.5009L110.421 14.2161C109.795 14.842 109.08 15.3785 108.365 15.9149ZM181.949 15.0208C180.965 14.3056 180.071 13.5903 179.088 12.875L179.624 12.1597C180.608 12.875 181.591 13.5903 182.485 14.3056L181.949 15.0208ZM113.282 12.1597L112.746 11.4444C113.729 10.7292 114.713 10.1033 115.696 9.47743L116.143 10.1927C115.339 10.8186 114.266 11.4444 113.282 12.1597ZM176.227 10.908C175.243 10.2821 174.17 9.65625 173.187 9.03038L173.634 8.22569C174.617 8.85156 175.69 9.47743 176.674 10.1033L176.227 10.908ZM119.273 8.3151L118.826 7.51042C119.898 6.88455 120.971 6.34809 121.955 5.81163L122.313 6.61632C121.418 7.15278 120.345 7.77865 119.273 8.3151ZM170.057 7.3316C168.984 6.79514 167.911 6.25868 166.839 5.81163L167.196 5.00694C168.269 5.45399 169.342 5.99045 170.415 6.61632L170.057 7.3316ZM125.621 5.18576L125.263 4.38108C126.336 3.93403 127.498 3.48698 128.571 3.03993L128.839 3.84462C127.856 4.20226 126.783 4.64931 125.621 5.18576ZM163.62 4.38108C162.547 3.93403 161.385 3.57639 160.312 3.21875L160.58 2.32465C161.742 2.68229 162.815 3.03993 163.977 3.48698L163.62 4.38108ZM132.326 2.7717L132.058 1.8776C133.22 1.51997 134.383 1.25174 135.545 0.983507L135.724 1.8776C134.651 2.14583 133.489 2.41406 132.326 2.7717ZM156.825 2.23524C155.662 1.96701 154.5 1.69878 153.338 1.51997L153.516 0.625868C154.679 0.804687 155.841 1.07292 157.093 1.34115L156.825 2.23524ZM139.211 1.34115L139.122 0.447049C140.284 0.268229 141.536 0.178819 142.698 0.0894097L142.787 0.983507C141.625 1.07292 140.463 1.16233 139.211 1.34115ZM149.851 1.07292C148.688 0.983507 147.526 0.894097 146.274 0.894097V0C147.437 0 148.688 0.0894097 149.851 0.178819V1.07292Z" fill="#B9BDC1"/>
<path d="M238.813 63.1233C237.651 63.0339 236.399 62.9445 235.237 62.7657L235.326 61.8716C236.489 62.0504 237.651 62.1398 238.813 62.2292V63.1233ZM242.479 63.1233L242.39 62.2292C243.552 62.1398 244.714 61.961 245.877 61.7822L246.056 62.6763C244.893 62.8551 243.641 63.0339 242.479 63.1233ZM231.661 62.1398C230.498 61.8716 229.336 61.514 228.174 61.1563L228.442 60.3516C229.604 60.7093 230.677 61.0669 231.839 61.3351L231.661 62.1398ZM249.543 61.6034L249.185 60.7987C250.258 60.3516 251.331 59.8152 252.314 59.2787L252.761 60.0834C251.778 60.6199 250.705 61.1563 249.543 61.6034ZM224.776 59.8152C223.703 59.3681 222.541 58.8317 221.468 58.2952L221.915 57.4905C222.988 58.027 224.061 58.5634 225.134 59.0105L224.776 59.8152ZM265.189 58.7423L265.1 57.8482C266.173 57.6693 267.335 57.4011 268.408 56.8647L268.766 57.6694C267.603 58.2058 266.352 58.5634 265.189 58.7423ZM261.523 58.5634C260.361 58.2952 259.199 57.9376 258.036 57.3117L258.483 56.507C259.556 57.0435 260.629 57.4011 261.702 57.6694L261.523 58.5634ZM255.712 57.7588L255.086 57.1329C255.891 56.3282 256.695 55.4341 257.321 54.4506L258.036 54.8977C257.411 55.8812 256.606 56.8647 255.712 57.7588ZM218.428 56.5964C217.444 55.9706 216.371 55.3447 215.388 54.6294L215.924 53.9141C216.908 54.6294 217.891 55.2553 218.875 55.8812L218.428 56.5964ZM271.895 55.7917L271.358 55.0765C272.253 54.4506 273.057 53.6459 273.951 52.7518L274.577 53.3777C273.683 54.2718 272.789 55.0765 271.895 55.7917ZM254.997 55.2553C254.102 54.4506 253.208 53.4671 252.582 52.4836L253.298 52.0365C253.924 52.9306 254.639 53.8247 255.533 54.6294L254.997 55.2553ZM212.437 52.4836C211.543 51.7683 210.56 50.9636 209.666 50.1589L210.292 49.5331C211.186 50.3378 212.08 51.053 212.974 51.8577L212.437 52.4836ZM259.646 51.5895L258.841 51.3213C259.199 50.4272 259.378 49.4437 259.556 48.4602C259.556 48.2813 259.646 48.1025 259.646 47.9237L260.54 48.0131C260.54 48.1919 260.54 48.4602 260.45 48.639C260.272 49.6225 260.003 50.6954 259.646 51.5895ZM251.152 48.9966C251.152 48.8178 251.152 48.639 251.152 48.4602C251.152 48.3707 251.152 48.2813 251.152 48.1919C251.241 47.0296 251.599 46.1355 252.135 45.3308L252.851 45.8673C252.404 46.4931 252.135 47.2978 252.046 48.2813C252.046 48.3707 252.046 48.4601 252.046 48.5496C252.046 48.7284 252.046 48.8178 252.046 48.9966H251.152ZM207.073 47.6555C206.268 46.8508 205.374 45.9567 204.569 45.0626L205.195 44.4367C206 45.3308 206.805 46.2249 207.609 47.0296L207.073 47.6555ZM258.573 45.152C257.768 44.5261 256.695 44.1685 255.622 44.2579L255.533 43.3638C256.874 43.185 258.215 43.632 259.199 44.4367L258.573 45.152ZM202.334 42.2909C201.619 41.3968 200.904 40.4133 200.188 39.4298L200.904 38.8933C201.619 39.8768 202.334 40.7709 203.049 41.7544L202.334 42.2909ZM198.043 36.4792C197.417 35.4957 196.791 34.4228 196.165 33.4393L196.97 32.9923C197.595 33.9758 198.221 35.0487 198.847 36.0322L198.043 36.4792ZM194.466 30.31C194.198 29.7735 193.93 29.2371 193.661 28.79L194.466 28.4324C194.734 28.9688 195.003 29.5053 195.271 29.9523L194.466 30.31Z" fill="#B9BDC1"/>
<path d="M282.177 32.3662L273.862 27.3593L308.642 13.8584L296.93 43.1848L286.916 34.512L308.642 13.8584" fill="white"/>
<path d="M291.744 29.8629L290.85 26.2866L281.015 24.5878" fill="white"/>
<path d="M285.217 43.9896L291.118 39.4297C291.207 39.3403 291.207 39.2509 291.118 39.1615L287.81 36.3003C287.72 36.2109 287.542 36.3003 287.542 36.3898L284.949 43.8108C284.949 43.9002 285.128 44.079 285.217 43.9896Z" fill="#FCB734"/>
<path d="M283.965 43.5424C283.876 43.5424 283.876 43.5424 283.786 43.5424C283.608 43.453 283.518 43.3635 283.518 43.1847L281.73 32.4556L282.624 32.2767L284.323 42.2906L290.403 37.4625L290.939 38.1778L284.234 43.4529C284.144 43.5424 284.055 43.5424 283.965 43.5424Z" fill="#F48024"/>
<path d="M283.876 43.3637C283.786 43.3637 283.786 43.3637 283.697 43.3637C283.429 43.2743 283.339 43.0061 283.429 42.8272L286.379 34.4227C286.469 34.1545 286.737 34.0651 286.916 34.1545C287.184 34.2439 287.273 34.5121 287.184 34.691L284.234 43.0955C284.234 43.2743 284.144 43.3637 283.876 43.3637Z" fill="#F48024"/>
<path d="M294.499 27.4863L293.698 27.8832L298.699 37.9784L299.5 37.5815L294.499 27.4863Z" fill="#B9BDC1"/>
<path d="M291.297 29.9521L290.492 26.644L280.925 25.0346L281.104 24.1405L290.939 25.8393C291.118 25.8393 291.297 26.0181 291.297 26.1969L292.191 29.7733L291.297 29.9521Z" fill="#B9BDC1"/>
<path d="M296.93 43.6317C296.84 43.6317 296.751 43.6317 296.661 43.5423L286.558 34.8696C286.469 34.7802 286.379 34.6908 286.379 34.5119C286.379 34.4225 286.469 34.2437 286.558 34.1543L304.172 17.3453L281.909 32.6343C281.73 32.7238 281.551 32.7238 281.372 32.6343L273.594 27.7168C273.415 27.6274 273.415 27.4486 273.415 27.2698C273.415 27.0909 273.504 27.0015 273.683 26.9121L308.464 13.4113C308.553 13.4113 308.553 13.4113 308.642 13.4113C308.732 13.4113 308.821 13.5007 308.911 13.5901C309 13.6795 309 13.7689 309 13.8583V13.9477V14.0371L297.287 43.3635C297.198 43.5423 297.109 43.6317 297.019 43.6317C296.93 43.6317 296.93 43.6317 296.93 43.6317ZM287.542 34.5119L296.751 42.4694L307.48 15.5571L287.542 34.5119ZM274.845 27.4486L281.73 31.8297L305.245 15.6465L274.845 27.4486Z" fill="#B9BDC1"/>
<path d="M277.26 50.1588C277.17 50.1588 276.991 50.0694 276.902 49.98C276.723 49.8012 276.723 49.533 276.902 49.3541L282.088 44.4366C282.267 44.2578 282.535 44.2578 282.714 44.4366C282.892 44.6154 282.892 44.8837 282.714 45.0625L277.528 49.98C277.438 50.1588 277.349 50.1588 277.26 50.1588Z" fill="#B9BDC1"/>
<path d="M276.008 47.7448C275.919 47.7448 275.74 47.6554 275.65 47.5659C275.471 47.3871 275.471 47.1189 275.65 46.9401L278.243 44.4366C278.422 44.2578 278.69 44.2578 278.869 44.4366C279.048 44.6154 279.048 44.8837 278.869 45.0625L276.276 47.5659C276.187 47.6554 276.097 47.7448 276.008 47.7448Z" fill="#B9BDC1"/>
<path d="M279.852 52.0363C279.763 52.0363 279.584 51.9469 279.495 51.8574C279.316 51.6786 279.316 51.4104 279.495 51.2316L282.088 48.7281C282.266 48.5493 282.535 48.5493 282.713 48.7281C282.892 48.9069 282.892 49.1752 282.713 49.354L280.121 51.8574C280.031 52.0363 279.942 52.0363 279.852 52.0363Z" fill="#B9BDC1"/>
<path d="M202.245 42.2908C201.529 41.3967 200.814 40.4132 200.099 39.4296L200.814 38.8932C201.529 39.8767 202.245 40.7708 202.96 41.7543L202.245 42.2908Z" fill="#E8B8A3"/>
</svg>
          </a>
      </div>
      
      <div id="site-description" class="ml32 fs-body2 wmx3 sm:pt16 sm:pb16 sm:ml0 sm:ta-center md:d-none sm:d-block">
        Essays, opinions, and advice on the act of computer programming from Stack Overflow.      </div>

      <nav id="menu" role="navigation" class="ml-auto sm:ml0 grid ai-center">
        <div class="ps-relative mr16">
  <form role="search" method="get" class="search-form" action="https://stackoverflow.blog/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="s-input s-input__search fs-body2 search-submit" placeholder="Find something" placeholder="Search &hellip;" value="" name="s" />
				</label>
				<input type="submit" class="v-visible-sr search-submit" aria-hidden="true" value="Search" />
			</form><svg aria-hidden="true" class="s-input-icon s-input-icon__search svg-icon iconSearch" width="18" height="18" viewBox="0 0 18 18"><path d="M18 16.5l-5.14-5.18h-.35a7 7 0 1 0-1.19 1.19v.35L16.5 18l1.5-1.5zM12 7A5 5 0 1 1 2 7a5 5 0 0 1 10 0z"></path></svg></div>
        <a class="py12 px8 fc-black-300 h:fc-black-400" href="https://stackoverflow.com/users/email/settings/current?__hstc=188987252.a2a4dcb0f856fe0e4513d47d380b0d26.1568193729712.1580289678034.1580299209983.129&__hssc=188987252.1.1580299209983&__hsfp=1774503237" title="Subscribe to the newsletter">
          <svg aria-hidden="true" class="svg-icon iconMail" width="18" height="18" viewBox="0 0 18 18"><path d="M1 6l8 5 8-5V4L9 9 1 4c0-1.1.9-2 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V6z"></path></svg>        </a>
        <a class="py12 px8 fc-black-300 h:fc-black-400" href="https://stackoverflow.blog/feed/" title="RSS feed">
          <svg aria-hidden="true" class="svg-icon iconRss" width="18" height="18" viewBox="0 0 18 18"><path d="M1 3c0-1.1.9-2 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3zm14.5 12C15.5 8.1 9.9 2.5 3 2.5V5a10 10 0 0 1 10 10h2.5zm-5 0A7.5 7.5 0 0 0 3 7.5V10a5 5 0 0 1 5 5h2.5zm-5 0A2.5 2.5 0 0 0 3 12.5V15h2.5z"></path></svg>        </a>
        <a class="py12 px8 fc-black-300 h:fc-black-400" href="https://twitter.com/stackoverflow" title="Follow us on Twitter">
          <svg aria-hidden="true" class="svg-icon iconTwitter" width="18" height="18" viewBox="0 0 18 18"><path d="M17 4.04c-.59.26-1.22.44-1.88.52a3.3 3.3 0 0 0 1.44-1.82c-.64.37-1.34.64-2.09.79a3.28 3.28 0 0 0-5.6 2.99A9.3 9.3 0 0 1 2.12 3.1a3.28 3.28 0 0 0 1.02 4.38 3.28 3.28 0 0 1-1.49-.4v.03a3.29 3.29 0 0 0 2.64 3.22 3.34 3.34 0 0 1-1.48.06 3.29 3.29 0 0 0 3.07 2.28 6.58 6.58 0 0 1-4.85 1.36 9.33 9.33 0 0 0 5.04 1.47c6.04 0 9.34-5 9.34-9.33v-.42a6.63 6.63 0 0 0 1.63-1.7L17 4.04z" fill="#2AA3EF"></path></svg>        </a>
        <button class="js-darkmode-btn py12 px8 fc-black-300 h:fc-black-400 s-btn__unset c-pointer" title="Toggle dark mode">
          <svg aria-hidden="true" class="svg-icon" width="24" height="24"><path d="M18.925 4.075c4.1 4.1 4.1 10.75 0 14.85s-10.75 4.1-14.85 0-4.1-10.75 0-14.85 10.75-4.1 14.85 0zM17.51 17.51a8.5 8.5 0 000-12.02L5.49 17.51a8.5 8.5 0 0012.02 0z"></path></svg>        </button>
        <a class="py12 px8 fc-black-300 h:fc-black-400" href="https://stackoverflow.com/" title="Go to stackoverflow.com">
          <svg aria-hidden="true" class="svg-icon iconLogoGlyphSm" width="19" height="22" viewBox="0 0 19 22"><path d="M16 20v-6h2v8H0v-8h2v6h14z" fill="#C1BEBC"></path><path d="M12.72 0l-1.57 1.17L17 9.05l1.57-1.18L12.72 0zM4 18h10v-2H4v2zm11.4-7.08L7.86 4.64l1.25-1.5 7.54 6.28-1.25 1.5zm-10-1.91l8.9 4.14.82-1.78-8.9-4.14L5.4 9zm8.63 6.27l-9.9-1.67.4-1.92 9.63 1.92-.13 1.67z" fill="#F48024"></path></svg>        </a>
      </nav>
    </header>

    <div id="container" class="p-wrapper mx-auto overflow-hidden">

      
    <nav class="grid sm:fd-column sm:ai-center fs-body2 mb96 sm:mb32">
  <div class="s-navigation s-navigation__scroll w100">
    <a href="/" class="ws-nowrap s-navigation--item ">Latest</a>
    <a href="/newsletter/" class="ws-nowrap s-navigation--item ">Newsletter</a>
    <a href="/podcast/" class="ws-nowrap s-navigation--item ">Podcast</a>
    <a href="/company/" class="ws-nowrap s-navigation--item ">Company</a>
  </div>
</nav><section id="content" role="main" class="mt96 sm:mt16">
      <article id="post-21194" class="mb64 post-21194 post type-post status-publish format-standard has-post-thumbnail hentry category-code-for-a-living tag-api tag-graphql tag-grpc tag-se-stackoverflow tag-se-tech">
  <div class="bb bc-black-1 pb64 sm:pb32 mb64 sm:mb32">
    <div class="grid sm:fd-column gs64">
              <div class="grid--cell6 order-last">
            <a href="https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/" class="d-block bar-lg overflow-hidden imgfill ps-relative bg-black-025 bs-md h:bs-lg ps-releative">
    <img width="1024" height="538" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-1200x630.jpg" class="w100 h100 d-block ps-absolute t0 r0 l0 b0 wp-post-image" alt="" decoding="async" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-1200x630.jpg 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-300x158.jpg 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-768x403.jpg 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-1536x806.jpg 1536w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/112822-Stack-Overflow-gRPC-vs-GraphQL-2048x1075.jpg 2048w " sizes="(max-width: 1024px) 100vw, 1024px" /> 

      </a>
        </div>
      
      <header class="grid--cell6">
        <section class="mb16">
  <a href="https://stackoverflow.blog/code-for-a-living/" class="s-tag bar-md va-middle mr12">code-for-a-living</a>  
  <span class="fc-black-300 tt-uppercase va-middle ls-sm">
    November 28, 2022  </span>
</section>

        <h1 class="fs-display1 lh-sm mb24">When to use gRPC vs GraphQL</h1>
        
        <div class="fs-body3 mb24 lh-excerpt">We dig into two of the most popular API protocols to see where they work best. </div>
        <div class="mt32 sm:mt16">
          <div class="grid ai-center author vcard fs-body2">
  <div class="grid__cell mr12 ws-nowrap">
          <div class="bar-circle overflow-hidden d-inline-block ">  
        <img alt='Avatar for ' src='https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/unnamed.png' srcset='https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/unnamed.png 2x ' class='avatar avatar-40 photo avatar-default d-block' height='40' width='40' loading='lazy' decoding='async'/>      </div>
      </div>
  <div class="grid__cell fc-black-350">
    <span class="d-block fw-bold fc-black-900">
      <a href="https://stackoverflow.blog/author/loren-sands-ramshaw/" title="Posts by Loren Sands-Ramshaw" class="author url fn" rel="author">Loren Sands-Ramshaw</a>    </span>
      </div>
</div>

        </div>
      </header>
    </div>
  </div>

  <div class="p-article wmx9 fc-black-700 mb96">
    
<p><em>TLDR: Use GraphQL for client-server communication and gRPC for server-to-server. See the Verdict section for exceptions to this rule.</em></p>



<p>I&#8217;ve read a lot of comparisons of these two protocols and wanted to write one that is comprehensive and impartial. (Well, as impartial as I and my reviewers can make it 😄.) I was inspired by the release of <a href="https://buf.build/blog/connect-web-protobuf-grpc-in-the-browser">connect-web</a> (a TypeScript gRPC client that can be used in the browser) and a popular HN post entitled <a href="https://news.ycombinator.com/item?id=32366759">GraphQL kinda sucks</a>. My personal history of communication protocols built on top of <a href="https://en.wikipedia.org/wiki/OSI_model">layer 7</a>:</p>



<ul>
<li>REST (Rails and Express)</li>



<li>➡️ DDP (Meteor&#8217;s <a href="https://github.com/meteor/meteor/blob/devel/packages/ddp/DDP.md">WebSocket protocol</a>)</li>



<li>➡️ GraphQL (which I wrote <a href="https://graphql.guide/">a book</a> about)</li>



<li>➡️ gRPC (which I use at <a href="https://temporal.io/">Temporal</a>)</li>
</ul>



<h1 id="h-background">Background</h1>



<p><a href="http://grpc.io">gRPC</a> was released in 2016 by Google as an efficient and developer-friendly method of server-to-server communication. <a href="http://graphql.org">GraphQL</a> was released in 2015 by Meta as an efficient and developer-friendly method of client-server communication. They both have significant advantages over REST and have a lot in common. We’ll spend most of the article comparing their traits, and then we’ll summarize each protocol’s strengths and weaknesses. At the end, we’ll know why each is such a good fit for its intended domain and when we might want to use one in the other’s domain.</p>



<h2 id="h-comparing-grpc-and-graphql-features">Comparing gRPC and GraphQL features</h2>



<h3 id="h-interface-design">Interface design</h3>



<p>Both gRPC and GraphQL are <a href="https://en.wikipedia.org/wiki/Interface_description_language">Interface Description Languages</a> (IDLs) that describe how two computers can talk to each other. They work across different programming languages, and we can use codegen tools to generate typed interfaces in a number of languages. IDLs abstract away the transport layer; GraphQL is transport-agnostic but generally used over HTTP, while gRPC uses HTTP/2. We don’t need to know about transport-level details like the method, path, query parameters, and body format in as REST. We just need to know a <strong>single endpoint</strong> that we use our higher-level client library to communicate with.</p>



<h3 id="h-message-format">Message format</h3>



<p>Message size matters because smaller messages generally take less time to send over the network. gRPC uses <a href="https://developers.google.com/protocol-buffers">protocol buffers</a> (a.k.a. protobufs), a <strong>binary format</strong> that just includes values, while&nbsp; GraphQL uses JSON, which is text-based and includes field names in addition to values. The binary format combined with less information sent generally results in gRPC messages being smaller than GraphQL messages. (While an efficient binary format is <a href="https://github.com/esseswann/graphql-binary">feasible</a> in GraphQL, it’s rarely used and isn’t supported by most of the libraries and tooling.)</p>



<p>Another aspect that affects message size is <strong>overfetching</strong>: whether we can request only specific fields or will always receive all fields (“overfetching” fields we don’t need). GraphQL always specifies in the request which fields are desired, and in gRPC, we can use <a href="https://netflixtechblog.com/practical-api-design-at-netflix-part-1-using-protobuf-fieldmask-35cfdc606518">FieldMasks</a> as reusable filters for requests.</p>



<p>Another benefit to gRPC’s binary format is faster serializing and parsing of messages compared to that of GraphQL’s text messages. The downside is that it’s harder to view and debug than the human-readable JSON. We at Temporal use protobuf’s <a href="https://developers.google.com/protocol-buffers/docs/proto3#json">JSON format</a> by default for the visibility benefit to developer experience. (That loses the efficiency that came with the binary format, but users who value the efficiency more can switch to binary.)</p>



<h3 id="h-defaults">Defaults</h3>



<p>gRPC also doesn’t include default values in messages, which GraphQL can do for arguments but not request fields or response types. This is another factor in gRPC messages’ smaller size. It also affects the DX of consuming a gRPC API. There’s no distinction between leaving an input field unset and setting it to the default value, and the default value is based on the type of the field. All booleans default to false, and all numbers and enums default to 0. We can’t default the `behavior` enum input field to `BEHAVIOR_FOO = 2`—we have to either put the default value first (`BEHAVIOR_FOO = 0`), which means it will always be the default in the future, or we follow the recommended practice of having a `BEHAVIOR_UNSPECIFIED = 0` enum value:</p>



<pre class="s-code-block wp-block-code"><code>enum Behavior {
  BEHAVIOR_UNSPECIFIED = 0;
  BEHAVIOR_FOO = 1;
  BEHAVIOR_BAR = 2;
}
</code></pre>



<p>The API provider needs to communicate what <code>UNSPECIFIED</code> means (by documenting “unspecified will use the default behavior, which is currently <code>FOO</code>”), the consumer needs to think about whether the server default behavior may change in the future (if the server saves the provided <code>UNSPECIFIED</code> / 0 value in some business entity the consumer is creating, and the server later changes the default behavior, the entity will start behaving differently) and whether that would be desired. If it wouldn’t be desired, the client needs to set the value to the current default. Here’s an example scenario:</p>



<pre class="s-code-block wp-block-code"><code>service ExampleGrpcService {
  rpc CreateEntity (CreateEntityRequest) returns (CreateEntityResponse) {}
}

message CreateEntityRequest {
  string name = 1;
  Behavior behavior = 2;
}
</code></pre>



<p>If we do:&nbsp;</p>



<pre class="s-code-block wp-block-code"><code>const request = new CreateEntityRequest({ name: “my entity” })
service.CreateEntity(request)
</code></pre>



<p>we’ll be sending <code>BEHAVIOR_UNSPECIFIED</code>, which depending on the server implementation and future changes, might mean <code>BEHAVIOR_FOO</code> now and <code>BEHAVIOR_BAR</code> later. Or we can do:</p>



<pre class="s-code-block wp-block-code"><code>const request = new CreateEntityRequest({ name: “my entity”, behavior: Behavior.BEHAVIOR_FOO })
service.CreateEntity(request)
</code></pre>



<p>to be certain the behavior is stored as <code>FOO</code> and will remain <code>FOO</code>.</p>



<p>The equivalent GraphQL schema would be:</p>



<pre class="s-code-block wp-block-code"><code>type Mutation {
  createEntity(name: String, behavior: Behavior = FOO): Entity
}

enum Behavior {
  FOO
  BAR
}
</code></pre>



<p>When we don’t include <code>behavior</code> in the request, the server code will receive and store FOO as the value, matching the <code>= FOO</code> default in the schema above.</p>



<pre class="s-code-block wp-block-code"><code>graphqlClient.request(`
  mutation  {
    createEntity(name: “my entity”)
  }
`
</code></pre>



<p>It’s simpler than the gRPC version to know what will happen if the field isn’t provided, and we don’t need to consider whether to pass the default value ourselves.</p>



<p>Other <a href="https://developers.google.com/protocol-buffers/docs/proto3#default">types’ defaults</a> have other quirks. For numbers, sometimes the default 0 is a valid value, and sometimes it will mean a different default value. For booleans, the default false results in negatively named fields. When we’re naming a boolean variable while coding, we use the positive name. For instance, we’d usually declare <code>let retryable = true</code> rather than <code>let nonRetryable = false</code>. People generally find the former more readable, as the latter takes an extra step to understand the double negative (“<code>notRetryable</code> is <code>false</code>, so it’s retryable”). But if we have a gRPC API in which we want the default state to be retryable, then we have to name the field <code>nonRetryable</code>, because the default of an <code>retryable</code> field would be <code>false</code>, like all booleans in gRPC.</p>



<h3 id="h-request-format">Request format</h3>



<p>In gRPC, we call methods one at a time. If we need more data than a single method provides, we need to call multiple methods. And if we need response data from the first method in order to know which method to call next, then we’re doing multiple <a href="https://graphql.guide/background/latency/">round trips</a> in a row. Unless we’re in the same data center as the server, that causes a significant delay. This issue is called <strong>underfetching.</strong></p>



<p>This is one of the issues GraphQL was designed to solve. It’s particularly important over high-latency mobile phone connections to be able to get all the data you need in a single request. In GraphQL, we send a string (called a <em>document</em>) with our request that includes all the methods (called <em>queries</em> and <em>mutations</em>) we want to call and all the nested data we need based on the first-level results. Some of the nested data may require subsequent requests from the server to the database, but they’re usually located in the same data center, which should have sub-millisecond network latency.</p>



<p>GraphQL’s request flexibility lets front-end and back-end teams become <strong>less coupled</strong>. Instead of the front-end developers waiting for the back-end developers to add more data to a method’s response (so the client can receive the data in a single request), the front-end developers can add more queries or nested result fields to their request. When there’s a GraphQL API that covers the organization’s entire data graph, the front-end team gets blocked waiting for backend changes much less frequently.</p>



<p>The fact that the GraphQL request specifies all desired data fields means that the client can use <strong>declarative data fetching</strong>: instead of imperatively fetching data (like calling `grpcClient.callMethod()&#8220;`), we declare the data we need next to our view component, and the GraphQL client library combines those pieces into a single request and provides the data to the components when the response arrives and later when the data changes. The parallel for <a href="https://www.javascriptstuff.com/view-libraries/">view libraries</a> in web development is using React instead of jQuery: declaring how our components should look and having them automatically update when data changes instead of imperatively manipulating the DOM with jQuery.</p>



<p>Another effect GraphQL’s request format has is <strong>increased visibility</strong>: the server sees each field that’s requested. We can track field usage and see when clients have stopped using deprecated fields, so that we know when we can remove them as opposed to forever supporting something that we said we’d get rid of. Tracking is built into common tools like <a href="https://www.apollographql.com/docs/graphos/metrics/field-usage/">Apollo GraphOS</a> and <a href="https://stellate.co/graphql-metrics">Stellate</a>.</p>



<h3 id="h-forward-compatibility">Forward compatibility</h3>



<p>Both gRPC and GraphQL have good forward compatibility; that is, it’s easy to update the server in a way that doesn’t break existing clients. This is particularly important for mobile apps that may be out of date, but also necessary in order for <a href="https://en.wikipedia.org/wiki/Single-page_application">SPAs</a> loaded in users’ browser tabs to continue working after a server update.</p>



<p>In gRPC, you can maintain forward compatibility by numerically ordering fields, adding fields with new numbers, and not changing the types/numbers of existing fields. In GraphQL, you can add fields, deprecate old fields with the `@deprecated&#8220;` directive (and leave them functioning), and avoid changing optional arguments to be required.</p>



<h3 id="h-transport">Transport</h3>



<p>Both gRPC and GraphQL support the <strong>server streaming</strong> data to the client: gRPC has <a href="https://grpc.io/docs/what-is-grpc/core-concepts/#server-streaming-rpc">server streaming</a> and GraphQL has <a href="https://spec.graphql.org/October2021/#sec-Subscription">Subscriptions</a> and the directives <a href="https://graphql.org/blog/2020-12-08-improving-latency-with-defer-and-stream-directives/">@defer</a>, <a href="https://graphql.org/blog/2020-12-08-improving-latency-with-defer-and-stream-directives/">@stream</a>, and <a href="https://github.com/n1ru4l/graphql-live-query">@live</a>. gRPC’s HTTP/2 also supports <a href="https://grpc.io/docs/what-is-grpc/core-concepts/#client-streaming-rpc">client and bidirectional</a> streaming (although we can’t do bidirectional when one side is a browser). HTTP/2 also has improved performance through <a href="https://web.dev/performance-http2/#request-and-response-multiplexing">multiplexing</a>.&nbsp;</p>



<p>gRPC has <strong>built-in retries</strong> on network failure, whereas in GraphQL, it might be included in your particular client library, like Apollo Client’s <a href="https://www.apollographql.com/docs/react/api/link/apollo-link-retry/">RetryLink</a>. gRPC also has built-in <a href="https://grpc.io/blog/deadlines/">deadlines</a>.</p>



<p>There are also some limitations of the transports. gRPC is unable to use most <strong>API proxies</strong> like <a href="https://docs.apigee.com/api-platform/get-started/get-started">Apigee Edge</a> that operate on HTTP headers, and when the client is a browser, we need to use <a href="https://grpc.io/docs/platforms/web/basics/#configure-the-envoy-proxy">gRPC-Web proxy</a> or <a href="https://connect.build/docs/protocol">Connect</a> (while modern browsers do support HTTP/2, there aren’t browser APIs that allow enough control over the requests). By default, GraphQL doesn’t work with <strong>GET caching</strong>: much of HTTP caching works on GET requests, and most GraphQL libraries default to using POST. GraphQL has a number of options for using GET, including putting the operation in a query parameter (viable when the operation string isn’t too long), build-time persisted queries (usually just used with private APIs), and <a href="https://www.apollographql.com/docs/apollo-server/performance/apq/">automatic persisted queries</a>. Cache directives can be provided at the field level (the shortest value in the whole response is used for the Cache-Control header’s `max-age`).</p>



<h3 id="h-schema-and-types">Schema and types</h3>



<p>GraphQL has a schema that the server publishes for client devs and uses to process requests. It defines all the possible queries and mutations and all the data types and their relations to each other (the graph). The schema makes it easy to <strong>combine data</strong> from multiple services. GraphQL has the concepts of schema stitching (imperatively combining multiple GraphQL APIs into a single API that proxies parts of the schema) and <a href="https://www.apollographql.com/docs/federation/">federation</a> (each downstream API <a href="https://www.apollographql.com/docs/federation/federated-types/federated-directives">declares</a> how to associate shared types, and the gateway <a href="https://www.apollographql.com/docs/federation/query-plans">automatically resolves</a> a request by making requests to downstream APIs and combining the results) for creating a <a href="https://www.apollographql.com/blog/announcement/backend/the-supergraph-a-new-way-to-think-about-graphql/">supergraph</a> (a graph of all our data that combines smaller subgraphs / partial schemas). There are also libraries that proxy other protocols to GraphQL, <a href="https://www.graphql-mesh.com/docs/handlers/grpc">including gRPC</a>.</p>



<p>Along with GraphQL’s schema comes further developed <strong>introspection</strong>: the ability to query the server in a standard way to determine what its capabilities are. All GraphQL server libraries have introspection, and there are advanced tools based on introspection like <a href="http://graphql.org/swapi-graphql">GraphiQL</a>, request linting with <a href="https://github.com/B2o5T/graphql-eslint">graphql-eslint</a>, and <a href="https://www.apollographql.com/docs/studio/">Apollo Studio</a>, which includes a query IDE with field autocompletion, linting, autogenerated docs, and search. gRPC has <a href="https://github.com/grpc/grpc/blob/master/doc/server-reflection.md">reflection</a>, but it’s not as widespread, and there’s less tooling that uses it.</p>



<p>The GraphQL schema enables a <strong>reactive normalized client cache</strong>: because each (nested) object has a type field, types are shared between different queries, and we can tell the client which field to use as an ID for each type, the client can store data objects normalized. This enables advanced client features, such as a query result or optimistic update triggering updates to view components that depend on different queries that include the same object.</p>



<p>There are a few differences between gRPC and GraphQL types:</p>



<ul>
<li>gRPC version 3 (latest as of writing) does not have <strong>required fields</strong>: instead, every field has a default value. In GraphQL, the server can differentiate between a value being present and absent (null), and the schema can indicate that an argument must be present or that a response field will always be present.</li>



<li>In gRPC, there is no standard way to know whether a method will <strong>mutate state</strong> (vs GraphQL, which separates queries and mutations).</li>



<li><strong>Maps</strong> are supported in gRPC but not in GraphQL: if you have a data type like `{[key: string] : T}`, you need to use a JSON string type for the whole thing.</li>
</ul>



<p>A downside of GraphQL’s schema and flexible queries is that <strong>rate limiting</strong> is more complex for public APIs (for private APIs, we can allowlist our persisted queries). Since we can include as many queries as we’d like in a single request, and those queries can ask for arbitrarily nested data, we can’t just limit the number of requests from a client or assign cost to different methods. We need to implement <a href="https://shopify.engineering/rate-limiting-graphql-apis-calculating-query-complexity">cost analysis rate limiting</a> on the whole operation, for example by using the <a href="https://github.com/pa-bru/graphql-cost-analysis">graphql-cost-analysis</a> library to sum individual field costs and pass them to a <a href="https://en.wikipedia.org/wiki/Leaky_bucket">leaky bucket</a> algorithm.</p>



<h2 id="h-summary">Summary</h2>



<p>Here’s a summary of the topics we’ve covered:</p>



<h3 id="h-similarities-between-grpc-and-graphql">Similarities between gRPC and GraphQL</h3>



<ul>
<li>Typed interfaces with codegen</li>



<li>Abstract away the network layer</li>



<li>Can have JSON responses</li>



<li>Server streaming</li>



<li>Good forward compatibility</li>



<li>Can avoid overfetching</li>
</ul>



<h3 id="h-grpc">gRPC</h3>



<h4 id="h-strengths">Strengths</h4>



<ul>
<li>Binary format:
<ul>
<li>Faster transfer over network</li>



<li>Faster serializing, parsing, and validation</li>



<li>However, harder to view and debug than JSON</li>
</ul>
</li>



<li>HTTP/2:
<ul>
<li>Multiplexing</li>



<li>Client and bidirectional streaming</li>
</ul>
</li>



<li>Built-in retries and deadlines</li>
</ul>



<h4 id="h-weaknesses">Weaknesses</h4>



<ul>
<li>Need proxy or <a href="https://connect.build/docs/protocol/">Connect</a> to use from the browser</li>



<li>Unable to use most API proxies</li>



<li>No standard way to know whether a method will mutate state</li>
</ul>



<h3 id="h-graphql">GraphQL</h3>



<h4 id="h-strengths-1">Strengths</h4>



<ul>
<li>Client determines which data fields it wants returned. Results in:
<ul>
<li>No underfetching</li>



<li>Team decoupling</li>



<li>Increased visibility</li>
</ul>
</li>



<li>Easier to combine data from multiple services</li>



<li>Further developed introspection and tooling</li>



<li>Declarative data fetching</li>



<li>Reactive normalized client cache</li>
</ul>



<h4 id="h-weaknesses-1">Weaknesses</h4>



<ul>
<li>If we already have gRPC services that can be exposed to the public, it takes more backend work to add a GraphQL server.</li>



<li>HTTP GET caching doesn’t work by default.</li>



<li>Rate limiting is more complex for public APIs.</li>



<li>Maps aren’t supported.</li>



<li>Inefficient text-based transport</li>
</ul>



<h2 id="h-verdict">Verdict</h2>



<h3 id="h-server-to-server">Server-to-server</h3>



<p>In server-to-server communication, where low latency is often important, and more types of streaming are sometimes necessary, gRPC is the clear standard. However, there are cases in which we may find some of the benefits of GraphQL more important:</p>



<ul>
<li>We’re using GraphQL <a href="https://www.apollographql.com/docs/federation/">federation</a> or schema stitching to create a supergraph of all our business data and decide to have GraphQL subgraphs published by each service. We create two supergraph endpoints: one external to be called by clients and one internal to be called by services. In this case, it may not be worth it for services to also expose a gRPC API, because they can all be conveniently reached through the supergraph.</li>



<li>We know our services’ data fields are going to be changing and want field-level visibility on usage so that we can remove old deprecated fields (and aren’t stuck with maintaining them forever).</li>
</ul>



<p>&gt; There’s also the question of whether we should be doing server-to-server communication ourselves at all. For data fetching (GraphQL’s <em>queries</em>), it’s the fastest way to get a response, but for modifying data (<em>mutations</em>), things like Martin Fowler’s “synchronous calls considered harmful” (see <a href="https://www.martinfowler.com/articles/microservices.html?ref=wellarchitected#SynchronousCallsConsideredHarmful">sidebar here</a>) have led to using async, event-driven architecture with either choreography or orchestration between services. <a href="https://www.manning.com/books/microservices-patterns"><em>Microservices Patterns</em></a> recommends using the latter in most cases, and to maintain DX and development speed, we need a <a href="https://www.youtube.com/watch?v=6lSuDRRFgyY">code-based orchestrator</a> instead of a DSL-based one. And once we’re working in a code-based orchestrator like Temporal, we no longer make network requests ourselves—the platform reliably handles it for us. In <a href="https://twitter.com/lorendsr/status/1419880024929415173">my opinion</a>, that’s the future.</p>



<h3 id="h-client-server">Client-server</h3>



<p>In client-server communication, latency is high. We want to be able to get all the data we need in a single round trip, have flexibility in what data we fetch for different views, and have powerful caching, so GraphQL is the clear winner. However, there are cases in which we may choose to use gRPC instead:<br></p>



<ul>
<li>We already have a gRPC API that can be used, and the cost of adding a GraphQL server in front of that isn’t worth the benefits.</li>



<li>JSON is not a good fit for the data (e.g. we’re sending a significant amount of binary data).</li>
</ul>



<hr class="wp-block-separator has-alpha-channel-opacity"/>



<p>I hope this article aided your understanding of the protocols and when to use them! If you’d like to learn more about GraphQL, check out their <a href="https://graphql.org/learn/">site</a> or my book, <a href="https://graphql.guide/"><em>The GraphQL Guide</em></a>. For more about gRPC, here’s their <a href="https://grpc.io/about/">site</a> and <a href="https://grpc.io/docs/what-is-grpc/introduction/">documentation</a>.</p>



<p><em>Thanks to Marc-André Giroux, Uri Goldshtein, Sashko Stubailo, Morgan Kestner, Andrew Ingram, Lenny Burdette, Martin Bonnin, James Watkins-Harvey, Josh Wise, Patrick Rachford, and Jay Miller for reading drafts of this.</em></p>
    Tags: <a href="https://stackoverflow.blog/tag/api/" rel="tag">api</a>, <a href="https://stackoverflow.blog/tag/graphql/" rel="tag">graphql</a>, <a href="https://stackoverflow.blog/tag/grpc/" rel="tag">gRPC</a>  </div>
</article>      <div id="section-podcast" class="mb48 mt12 p24 mxn24 sm:ml0 sm:mr0 sm:pl16 sm:pr16 bar-xl fc-white d:fc-black-800" style="background-color:#272727">
    
    <div class="fc-white d:fc-black-900 fs-body3 wmx7 pl16 mb24 mt8">
  <a href="/podcast/"><img src="https://stackoverflow.blog/wp-content/themes/stackoverflow/img/logo-podcast.svg" class="float-left mr24" alt="Podcast logo" /></a>

  <a href="/podcast/" class="fw-bold fc-white d:fc-black-900">The Stack Overflow Podcast</a> is a weekly conversation about working in software development, learning to code, and the art and culture of computer programming.
</div>
    <iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/efaed341-55f6-42b9-9e4d-cc751ae0b173?dark=true"></iframe>
  </div>
      <h2 class="fs-headline1">Related</h2>

  <div class="grid mxn16 ff-row-wrap md:fd-column">
          <div class="grid--cell3  overflow-hidden p16 pb48 sm:pb16">
        <article id="post-20198" class="d-flex fd-column h100 post-20198 post type-post status-publish format-standard has-post-thumbnail hentry category-code-for-a-living tag-api tag-data tag-json tag-se-stackoverflow tag-se-tech">
    <a href="https://stackoverflow.blog/2022/06/02/a-beginners-guide-to-json-the-data-format-for-the-internet/" class="d-block bar-lg overflow-hidden imgfill ps-relative bg-black-025 bs-md h:bs-lg ps-releative">
    <img width="1024" height="538" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/020622-Stack-Overflow-Understanding-JSON-1200x630.jpg" class="w100 h100 d-block ps-absolute t0 r0 l0 b0 wp-post-image" alt="" decoding="async" loading="lazy" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/020622-Stack-Overflow-Understanding-JSON-1200x630.jpg 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/020622-Stack-Overflow-Understanding-JSON-300x158.jpg 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/020622-Stack-Overflow-Understanding-JSON-768x403.jpg 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/020622-Stack-Overflow-Understanding-JSON-1536x806.jpg 1536w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/020622-Stack-Overflow-Understanding-JSON-2048x1075.jpg 2048w " sizes="(max-width: 1024px) 100vw, 1024px" /> 

      </a>

  <header class="mt24 sm:mt16">
    <section class="mb16">
  <a href="https://stackoverflow.blog/code-for-a-living/" class="s-tag bar-md va-middle mr12">code-for-a-living</a>  
  <span class="fc-black-300 tt-uppercase va-middle ls-sm">
    June 2, 2022  </span>
</section>
    <h2 class="fs-headline1 lh-sm ww-break-word">
  <a
    href="https://stackoverflow.blog/2022/06/02/a-beginners-guide-to-json-the-data-format-for-the-internet/"
    title="A beginner&#8217;s guide to JSON, the data format for the internet"
    rel="bookmark"
    class="fc-black-800 h:fc-blue-500"
  >
    A beginner&#8217;s guide to JSON, the data format for the internet  </a>
</h2>  </header>

  <div class="fs-body3 mb24 lh-excerpt">When APIs send data, chances are they send it as JSON objects. Here's a primer on why JSON is how networked applications send data. </div>
  <div class="mt-auto bb bc-black-1 pb16">
    <div class="grid ai-center author vcard fs-body2">
  <div class="grid__cell mr12 ws-nowrap">
          <div class="bar-circle overflow-hidden d-inline-block ">  
        <img alt='Avatar for ' src='https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/unnamed-17.jpg' srcset='https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/unnamed-17.jpg 2x ' class='avatar avatar-40 photo avatar-default d-block' height='40' width='40' loading='lazy' decoding='async'/>      </div>
      </div>
  <div class="grid__cell fc-black-350">
    <span class="d-block fw-bold fc-black-900">
      <a href="https://stackoverflow.blog/author/sam-robbins/" title="Posts by Sam Robbins" class="author url fn" rel="author">Sam Robbins</a>    </span>
      </div>
</div>

  </div>
</article>      </div>
          <div class="grid--cell3 sm:d-none overflow-hidden p16 pb48 sm:pb16">
        <article id="post-21154" class="d-flex fd-column h100 post-21154 post type-post status-publish format-standard has-post-thumbnail hentry category-code-for-a-living tag-authentication tag-biometrics tag-se-stackoverflow tag-se-tech tag-web-development">
    <a href="https://stackoverflow.blog/2022/11/16/biometric-authentication-for-web-devs/" class="d-block bar-lg overflow-hidden imgfill ps-relative bg-black-025 bs-md h:bs-lg ps-releative">
    <img width="1024" height="538" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/111522-Stack-Overflow-Biometrics-for-web-developers-1200x630.jpg" class="w100 h100 d-block ps-absolute t0 r0 l0 b0 wp-post-image" alt="" decoding="async" loading="lazy" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/111522-Stack-Overflow-Biometrics-for-web-developers-1200x630.jpg 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/111522-Stack-Overflow-Biometrics-for-web-developers-300x158.jpg 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/111522-Stack-Overflow-Biometrics-for-web-developers-768x403.jpg 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/111522-Stack-Overflow-Biometrics-for-web-developers-1536x806.jpg 1536w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/11/111522-Stack-Overflow-Biometrics-for-web-developers-2048x1075.jpg 2048w " sizes="(max-width: 1024px) 100vw, 1024px" /> 

      </a>

  <header class="mt24 sm:mt16">
    <section class="mb16">
  <a href="https://stackoverflow.blog/code-for-a-living/" class="s-tag bar-md va-middle mr12">code-for-a-living</a>  
  <span class="fc-black-300 tt-uppercase va-middle ls-sm">
    November 16, 2022  </span>
</section>
    <h2 class="fs-headline1 lh-sm ww-break-word">
  <a
    href="https://stackoverflow.blog/2022/11/16/biometric-authentication-for-web-devs/"
    title="You can add biometric authentication to your webpage. Here&#8217;s how."
    rel="bookmark"
    class="fc-black-800 h:fc-blue-500"
  >
    You can add biometric authentication to your webpage. Here&#8217;s how.  </a>
</h2>  </header>

  <div class="fs-body3 mb24 lh-excerpt">Prompting for a username and password is so 2005. Today, you can just prompt for a fingerprint. </div>
  <div class="mt-auto bb bc-black-1 pb16">
    <div class="grid ai-center author vcard fs-body2">
  <div class="grid__cell mr12 ws-nowrap">
          <div class="bar-circle overflow-hidden d-inline-block ">  
        <img alt='Avatar for ' src='https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/03/DMoore1_SQ_small.jpg' srcset='https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/03/DMoore1_SQ_small.jpg 2x ' class='avatar avatar-40 photo avatar-default d-block' height='40' width='40' loading='lazy' decoding='async'/>      </div>
      </div>
  <div class="grid__cell fc-black-350">
    <span class="d-block fw-bold fc-black-900">
      <a href="https://stackoverflow.blog/author/dan-moore/" title="Posts by Dan Moore" class="author url fn" rel="author">Dan Moore</a>    </span>
      </div>
</div>

  </div>
</article>      </div>
          <div class="grid--cell3 sm:d-none overflow-hidden p16 pb48 sm:pb16">
        <article id="post-20265" class="d-flex fd-column h100 post-20265 post type-post status-publish format-standard has-post-thumbnail hentry category-community category-company tag-collectives tag-se-stackoverflow tag-se-tech tag-wso2">
    <a href="https://stackoverflow.blog/2022/06/14/wso2-joins-collectives-on-stack-overflow/" class="d-block bar-lg overflow-hidden imgfill ps-relative bg-black-025 bs-md h:bs-lg ps-releative">
    <img width="1024" height="538" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/coso-social-2-wso2.png" class="w100 h100 d-block ps-absolute t0 r0 l0 b0 wp-post-image" alt="" decoding="async" loading="lazy" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/coso-social-2-wso2.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/coso-social-2-wso2-300x158.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/06/coso-social-2-wso2-768x403.png 768w " sizes="(max-width: 1024px) 100vw, 1024px" /> 

      </a>

  <header class="mt24 sm:mt16">
    <section class="mb16">
  <a href="https://stackoverflow.blog/community/" class="s-tag bar-md va-middle mr12">community</a>  
  <span class="fc-black-300 tt-uppercase va-middle ls-sm">
    June 14, 2022  </span>
</section>
    <h2 class="fs-headline1 lh-sm ww-break-word">
  <a
    href="https://stackoverflow.blog/2022/06/14/wso2-joins-collectives-on-stack-overflow/"
    title="WSO2 joins Collectives™ on Stack Overflow"
    rel="bookmark"
    class="fc-black-800 h:fc-blue-500"
  >
    WSO2 joins Collectives™ on Stack Overflow  </a>
</h2>  </header>

  <div class="fs-body3 mb24 lh-excerpt">From inception, WSO2 had a firm belief in the power of open-source software. Its co-founders were early members of the Apache foundation, and their vision for WSO2 always incorporated the innovation and commitment of a global developer community. Over a decade ago, WSO2 helped to popularize the use of open source in the enterprise and…</div>
  <div class="mt-auto bb bc-black-1 pb16">
    <div class="grid ai-center author vcard fs-body2">
  <div class="grid__cell mr12 ws-nowrap">
          <div class="bar-circle overflow-hidden d-inline-block ">  
        <img alt='Avatar for Jascha Drel' src='https://secure.gravatar.com/avatar/17f7449b354b36da18f5be0920c5daf3?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/17f7449b354b36da18f5be0920c5daf3?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo d-block' height='40' width='40' loading='lazy' decoding='async'/>      </div>
      </div>
  <div class="grid__cell fc-black-350">
    <span class="d-block fw-bold fc-black-900">
      <a href="https://stackoverflow.blog/author/jdrel/" title="Posts by Jascha Drel" class="author url fn" rel="author">Jascha Drel</a>    </span>
      </div>
</div>

  </div>
</article>      </div>
          <div class="grid--cell3 sm:d-none overflow-hidden p16 pb48 sm:pb16">
        <article id="post-20114" class="d-flex fd-column h100 post-20114 post type-post status-publish format-standard has-post-thumbnail hentry category-code-for-a-living category-engineering tag-ddos tag-devops tag-se-stackoverflow tag-se-tech tag-security">
    <a href="https://stackoverflow.blog/2022/05/16/stack-under-attack-what-we-learned-about-handling-ddos-attacks/" class="d-block bar-lg overflow-hidden imgfill ps-relative bg-black-025 bs-md h:bs-lg ps-releative">
    <img width="1024" height="538" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/05/130522-Stack-Overflow-Stack-Under-Attack-1200x630.jpg" class="w100 h100 d-block ps-absolute t0 r0 l0 b0 wp-post-image" alt="" decoding="async" loading="lazy" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/05/130522-Stack-Overflow-Stack-Under-Attack-1200x630.jpg 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/05/130522-Stack-Overflow-Stack-Under-Attack-300x158.jpg 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/05/130522-Stack-Overflow-Stack-Under-Attack-768x403.jpg 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/05/130522-Stack-Overflow-Stack-Under-Attack-1536x806.jpg 1536w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2022/05/130522-Stack-Overflow-Stack-Under-Attack-2048x1075.jpg 2048w " sizes="(max-width: 1024px) 100vw, 1024px" /> 

      </a>

  <header class="mt24 sm:mt16">
    <section class="mb16">
  <a href="https://stackoverflow.blog/code-for-a-living/" class="s-tag bar-md va-middle mr12">code-for-a-living</a>  
  <span class="fc-black-300 tt-uppercase va-middle ls-sm">
    May 16, 2022  </span>
</section>
    <h2 class="fs-headline1 lh-sm ww-break-word">
  <a
    href="https://stackoverflow.blog/2022/05/16/stack-under-attack-what-we-learned-about-handling-ddos-attacks/"
    title="Stack under attack: what we learned about handling DDoS attacks"
    rel="bookmark"
    class="fc-black-800 h:fc-blue-500"
  >
    Stack under attack: what we learned about handling DDoS attacks  </a>
</h2>  </header>

  <div class="fs-body3 mb24 lh-excerpt">When the bots came for us, we strengthened our defenses. Here's what we learned about parrying a few DDoS attacks.</div>
  <div class="mt-auto bb bc-black-1 pb16">
    <div class="grid ai-center author vcard fs-body2">
  <div class="grid__cell mr12 ws-nowrap">
          <div class="bar-circle overflow-hidden d-inline-block ">  
        <img alt='Avatar for Josh Zhang' src='https://secure.gravatar.com/avatar/40e0e97d0c46e8265aa7e159071f81ee?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/40e0e97d0c46e8265aa7e159071f81ee?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo d-block' height='40' width='40' loading='lazy' decoding='async'/>      </div>
      </div>
  <div class="grid__cell fc-black-350">
    <span class="d-block fw-bold fc-black-900">
      <a href="https://stackoverflow.blog/author/jzhang/" title="Posts by Josh Zhang" class="author url fn" rel="author">Josh Zhang</a>    </span>
    Staff Site Reliability Engineer  </div>
</div>

  </div>
</article>      </div>
      </div>
    </div> <!-- closes #container -->

<section id="comments" class="bg-black-025 d:bg-black-050 px32 sm:pl12 sm:pr12">
  <div class="mx-auto wmx9 py64 ">  
        
    	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2022/11/28/when-to-use-grpc-vs-graphql/#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://stackoverflow.blog/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate><p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> <span class="required-field-message">Required fields are marked <span class="required">*</span></span></p><p class="comment-form-comment"><label for="comment">Comment <span class="required">*</span></label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" required></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" autocomplete="name" required /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" autocomplete="email" required /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200" autocomplete="url" /></p>
<p class="comment-form-cookies-consent"><input id="wp-comment-cookies-consent" name="wp-comment-cookies-consent" type="checkbox" value="yes" /> <label for="wp-comment-cookies-consent">Save my name, email, and website in this browser for the next time I comment.</label></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='21194' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="b4d96ebf3d" /></p><p style="display: none !important;"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js_1" name="ak_js" value="175"/><script>document.getElementById( "ak_js_1" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	<p class="akismet_comment_form_privacy_notice">This site uses Akismet to reduce spam. <a href="https://akismet.com/privacy/" target="_blank" rel="nofollow noopener">Learn how your comment data is processed</a>.</p>  </div>
</section>

<div><!-- reopens #container -->  </section>
</div>

<footer class="bg-black-800 d:bg-black-025 fc-black-500">
  <div class="p-wrapper bar0 mx-auto pt48 pb64 sm:pt32 sm:pb0 fs-body2 overflow-hidden print:d-none">
    <div class="grid sm:fd-column">
      <div class="grid--cell3 sm:mb32">
        <p class="mb24"><svg aria-hidden="true" class="native svg-icon iconLogoGlyphMd" width="32" height="37" viewBox="0 0 32 37"><path d="M26 33v-9h4v13H0V24h4v9h22z" fill="#BCBBBB"></path><path d="M21.5 0l-2.7 2 9.9 13.3 2.7-2L21.5 0zM26 18.4L13.3 7.8l2.1-2.5 12.7 10.6-2.1 2.5zM9.1 15.2l15 7 1.4-3-15-7-1.4 3zm14 10.79l.68-2.95-16.1-3.35L7 23l16.1 2.99zM23 30H7v-3h16v3z" fill="#F48024"></path></svg></p>
        <p>&copy; 2022 All Rights Reserved.<br>
        Proudly powered by <a href="https://wordpress.org" class="fc-black-400 h:fc-black-200">WordPress</a></p>
      </div>
      <div class="grid__fl1 grid ff-row-wrap sm:mb32">
        <div class="grid--cell6">
          <h3 class="tt-uppercase fs-body2 fc-black-200">Stack Overflow</h3>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.co/">About</a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.co/company/press">Press</a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.co/company/work-here">Work Here</a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.co/company/contact">Contact Us</a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.com/questions">
            Questions
          </a>
        </div>
        <div class="grid--cell6">
          <h3 class="tt-uppercase fs-body2 fc-black-200">Products</h3>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.co/teams">Teams</a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.co/advertising">
            Advertising
          </a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.co/collectives">
            Collectives
          </a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.co/talent">Talent</a>
        </div>
      </div>
      <div class="grid__fl1 grid ff-row-wrap sm:mb32">
        <div class="grid--cell6">
          <h3 class="tt-uppercase fs-body2 fc-black-200">Policies</h3>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.com/legal">Legal</a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.com/legal/privacy-policy">
            Privacy Policy
          </a>
          <a
            class="fc-black-400 h:fc-black-200 py2 d-block"
            href="https://stackoverflow.com/legal/terms-of-service">
            Terms of Service
          </a>
          <span class="fc-black-400 h:fc-black-200 py2 d-block c-pointer" onclick="OneTrust.ToggleInfoDisplay()">
            Cookie Settings
          </span>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.com/legal/cookie-policy">
            Cookie Policy
          </a>
        </div>
        <div class="grid--cell6">
          <h3 class="tt-uppercase fs-body2 fc-black-200">Channels</h3>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.blog/">
            Blog
          </a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.blog/podcast">
            Podcast
          </a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://stackoverflow.blog/newsletter">
            Newsletter
          </a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://twitter.com/stackoverflow">Twitter</a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://linkedin.com/company/stack-overflow">
            LinkedIn
          </a>
          <a class="fc-black-400 h:fc-black-200 py2 d-block" href="https://www.instagram.com/thestackoverflow/">
            Instagram
          </a>
        </div>
      </div>
    </div>
  </div>
</footer>

<script type='text/javascript' src='https://149351115.v2.pressablecdn.com/wp-includes/js/comment-reply.min.js?ver=6.1.1' id='comment-reply-js'></script>
<script defer type='text/javascript' src='https://149351115.v2.pressablecdn.com/wp-content/plugins/akismet/_inc/akismet-frontend.js?ver=1664378836' id='akismet-frontend-js'></script>
		<script type="text/javascript">
			(function() {
			var t   = document.createElement( 'script' );
			t.type  = 'text/javascript';
			t.async = true;
			t.id    = 'gauges-tracker';
			t.setAttribute( 'data-site-id', '58a295c34b2ffa62041185f8' );
			t.src = '//secure.gaug.es/track.js';
			var s = document.getElementsByTagName( 'script' )[0];
			s.parentNode.insertBefore( t, s );
			})();
		</script>
		
<script>
var darkModeBtn =  document.querySelector(".js-darkmode-btn");
var body = document.getElementsByTagName("body")[0];

darkModeBtn.addEventListener('click', function (e) {
  e.preventDefault();
  e.stopPropagation();

  var browserPrefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;

  var isForcedDarkMode = body.classList.contains("theme-dark");
  var isUnforcedDarkMode = browserPrefersDark && body.classList.contains("theme-system");

  if (browserPrefersDark) {
    body.classList.toggle("theme-system", !isUnforcedDarkMode);
    body.classList.toggle("theme-dark", false);
  } else {
    body.classList.toggle("theme-system", true);
    body.classList.toggle("theme-dark", !isForcedDarkMode);
  }

  localStorage.setItem("forceDarkModeOn", !(isUnforcedDarkMode || isForcedDarkMode));

  return false;
});
</script>

<script>
_linkedin_partner_id = "19337"; 
window._linkedin_data_partner_ids = window._linkedin_data_partner_ids || []; 
window._linkedin_data_partner_ids.push(_linkedin_partner_id); 
</script>
<script>
(function(){var s = document.getElementsByTagName("script")[0]; 
  var b = document.createElement("script"); 
  b.type = "text/javascript";
  b.async = true; 
  b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js"; 
  s.parentNode.insertBefore(b, s);
})(); 
</script>
<noscript>
  <img height="1" width="1" style="display:none;" alt="" src="https://px.ads.linkedin.com/collect/?pid=19337&fmt=gif" />
</noscript>

	<script src='https://stats.wp.com/e-202248.js' defer></script>
	<script>
		_stq = window._stq || [];
		_stq.push([ 'view', {v:'ext',blog:'162153688',post:'21194',tz:'-5',srv:'stackoverflow.blog',hp:'atomic',ac:'3',amp:'0',j:'1:11.6-a.5'} ]);
		_stq.push([ 'clickTrackerInit', '162153688', '21194' ]);
	</script></body>
</html>
<!--
	generated 148 seconds ago
	generated in 0.756 seconds
	served from batcache in 0.002 seconds
	expires in 152 seconds
-->
